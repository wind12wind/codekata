using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        HashSet<int> sumSet = new HashSet<int>();
        

        for (int i = 0; i < numbers.Length; i++) {
            for (int j = i + 1; j < numbers.Length; j++) {
                sumSet.Add(numbers[i] + numbers[j]);
            }
        }
        

        List<int> answer = new List<int>(sumSet);
        answer.Sort();
        

        return answer.ToArray();
    }
} //두개 뽑아서 더하기

using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {

        Dictionary<char, int> lastPositions = new Dictionary<char, int>();
        int[] answer = new int[s.Length];

        for (int i = 0; i < s.Length; i++) {
            char currentChar = s[i];

            if (lastPositions.ContainsKey(currentChar)) 
            {
                answer[i] = i - lastPositions[currentChar];
            } 
            else 
            {
                answer[i] = -1;
            }

            lastPositions[currentChar] = i;
        }

        return answer;
    }
} //가장가까운 같은 글자

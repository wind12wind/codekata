using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        HashSet<int> sumSet = new HashSet<int>();
        

        for (int i = 0; i < numbers.Length; i++) {
            for (int j = i + 1; j < numbers.Length; j++) {
                sumSet.Add(numbers[i] + numbers[j]);
            }
        }
        

        List<int> answer = new List<int>(sumSet);
        answer.Sort();
        

        return answer.ToArray();
    }
} //두개 뽑아서 더하기

using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(string s) {

        Dictionary<char, int> lastPositions = new Dictionary<char, int>();
        int[] answer = new int[s.Length];

        for (int i = 0; i < s.Length; i++) {
            char currentChar = s[i];

            if (lastPositions.ContainsKey(currentChar)) 
            {
                answer[i] = i - lastPositions[currentChar];
            } 
            else 
            {
                answer[i] = -1;
            }

            lastPositions[currentChar] = i;
        }

        return answer;
    }
} //가장가까운 같은 글자

using System;
using System.Text;

public class Solution {
    public string solution(int[] food) {
        StringBuilder answer = new StringBuilder();
        int[] halfFood = new int[food.Length];

        for (int i = 1; i < food.Length; i++) {
            halfFood[i] = food[i] / 2;
        }

        for (int i = 1; i < food.Length; i++) {
            answer.Append(new string(i.ToString()[0], halfFood[i]));
        }

        answer.Append('0');

        for (int i = food.Length - 1; i > 0; i--) {
            answer.Append(new string(i.ToString()[0], halfFood[i]));
        }

        return answer.ToString();
    }
}//푸드파이트

using System;

public class Solution {
    public int solution(int a, int b, int n) {
        int answer = 0;

        while (n >= a) 
        {
            int exchangedBottles = n / a * b;
            answer += exchangedBottles;

            n = n % a + exchangedBottles;
        }

        return answer;
    }
} //콜라문제

using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(int k, int[] score) {
        List<int> hallOfFame = new List<int>();
        int[] answer = new int[score.Length];

        for (int day = 0; day < score.Length; day++) {
            int currentScore = score[day];

            hallOfFame.Add(currentScore);

            hallOfFame = hallOfFame.OrderByDescending(x => x).ToList();
            if (hallOfFame.Count > k) {
                hallOfFame = hallOfFame.Take(k).ToList();
            }

            answer[day] = hallOfFame.LastOrDefault();
        }

        return answer;
    }
}//명예의전당
